<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!--1、识别到jdbc.properties-->
    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>
    <!--2. 阿里的druid数据源-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <property name="maxActive" value="20"></property>
        <property name="initialSize" value="5"></property>
        <property name="minIdle" value="1"></property>
        <property name="maxWait" value="60000"></property>
    </bean>
    <!--3、bookDAO
      老湿：那接口实现类的 对象id名称是什么
      IXXXDAO  IXXXDAO
      XXXDAO   xXXDAO
    -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.spring.day24ssm.dao"></property>
    </bean>

    <!--3.SqlSessionFactory      Spring就爱管理Bean： SqlSessionFactoryBean   就是用来创建SqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="configLocation" value="classpath:mybatis.xml"></property>
    </bean>

    <!--service-->
    <bean id="bookService" class="cn.spring.day24ssm.service.impl.BookServiceImpl">
        <property name="bookDAO" ref="IBookDAO"></property>
    </bean>

    <!--6、事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
         <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--7、事务处理-->
    <!--方式三：AspectJ方式  通用的用户-->
    <tx:advice id="bookAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!--这里是对所有需要事务环境的方法的事务属性策略的一个具体细化操作-->
            <tx:method name="add*" isolation="DEFAULT" propagation="REQUIRED" rollback-for="MyException"/>
            <tx:method name="select*" read-only="true"/>
        </tx:attributes>
    </tx:advice>
</beans>


















