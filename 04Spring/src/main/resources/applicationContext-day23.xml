<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--1、识别到jdbc.properties-->
    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>
    <!--2. 阿里的druid数据源-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <property name="maxActive" value="20"></property>
        <property name="initialSize" value="5"></property>
        <property name="minIdle" value="1"></property>
        <property name="maxWait" value="60000"></property>
    </bean>

    <!--3、AccountDAO-->
    <bean id="accountDAO" class="cn.spring.day23tx.dao.AccountDAOImpl">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--4、StockDAO-->
    <bean id="stockDAO" class="cn.spring.day23tx.dao.StockDAOImpl">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--5.Service只有一个就是Stock的Service-->
    <bean id="stockService" class="cn.spring.day23tx.service.StockServiceImpl">
        <property name="accountDAO" ref="accountDAO"></property>
        <property name="stockDAO" ref="stockDAO"></property>
    </bean>
    <!--6、事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
         <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--7、事务处理-->
    <!--方式一：事务代理工厂Bean-->
    <bean id="proxyBean" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager" ref="transactionManager"></property>
        <property name="target" ref="stockService"></property>
        <!--事务属性 隔离级别  传播行为-->
        <property name="transactionAttributes">
            <props>
                <prop key="buyStock">ISOLATION_DEFAULT,PROPAGATION_REQUIRED,-MyException</prop>
            </props>
        </property>
    </bean>

</beans>


















